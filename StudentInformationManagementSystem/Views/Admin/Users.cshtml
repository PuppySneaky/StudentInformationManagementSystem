@model IEnumerable<StudentInformationManagementSystem.Models.User>

@{
    ViewData["Title"] = "User Management";
}

<div class="container">
    <div class="row mb-4">
        <div class="col">
            <h1>User Management</h1>
            <p class="lead">View and manage all system users.</p>
            <hr />
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row mb-3">
        <div class="col">
            <a asp-action="CreateAdmin" class="btn btn-primary">
                <i class="bi bi-person-plus"></i> Create Admin
            </a>
            <a asp-action="Dashboard" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Back to Dashboard
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover mb-0">
                            <thead class="table-dark">
                                <tr>
                                    <th>Username</th>
                                    <th>Email</th>
                                    <th>Role</th>
                                    <th>Created</th>
                                    <th>Last Login</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model)
                                {
                                    <tr>
                                        <td>@user.Username</td>
                                        <td>@user.Email</td>
                                        <td><span class="badge bg-@(GetRoleBadgeColor(user.Role.Name))">@user.Role.Name</span></td>
                                        <td>@user.CreatedAt.ToString("MM/dd/yyyy")</td>
                                        <td>@(user.LastLogin.HasValue ? user.LastLogin.Value.ToString("MM/dd/yyyy") : "Never")</td>
                                        <td>
                                            @if (user.IsActive)
                                            {
                                                <span class="badge bg-success">Active</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Inactive</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group">
                                                <button type="button" class="btn btn-sm btn-outline-primary">
                                                    <i class="bi bi-pencil"></i>
                                                </button>
                                                <button type="button" class="btn btn-sm btn-outline-danger">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetRoleBadgeColor(string roleName)
    {
        return roleName.ToLower() switch
        {
            "admin" => "danger",
            "faculty" => "primary",
            "student" => "success",
            _ => "secondary"
        };
    }
}